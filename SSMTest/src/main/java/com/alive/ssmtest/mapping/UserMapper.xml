<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.alive.ssmtest.dao.IUserDao" >
  <resultMap id="BaseResultMap" type="com.alive.ssmtest.pojo.User" >
    <id column="Id" property="id" jdbcType="INTEGER" />
    <result column="Username" property="username" jdbcType="VARCHAR" />
    <result column="Password" property="password" jdbcType="VARCHAR" />
    <result column="Status" property="status" jdbcType="INTEGER" />
    <result column="CreateTime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="LastLoginTime" property="lastlogintime" jdbcType="TIMESTAMP" />
    <result column="LonginCount" property="longincount" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    Id, Username, Password, Status, CreateTime, LastLoginTime, LonginCount
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from synccacheuser
    where Id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from synccacheuser
    where Id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.alive.ssmtest.pojo.User" >
    insert into synccacheuser (Id, Username, Password, 
      Status, CreateTime, LastLoginTime, 
      LonginCount)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{createtime,jdbcType=TIMESTAMP}, #{lastlogintime,jdbcType=TIMESTAMP}, 
      #{longincount,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.alive.ssmtest.pojo.User" >
    insert into synccacheuser
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        Id,
      </if>
      <if test="username != null" >
        Username,
      </if>
      <if test="password != null" >
        Password,
      </if>
      <if test="status != null" >
        Status,
      </if>
      <if test="createtime != null" >
        CreateTime,
      </if>
      <if test="lastlogintime != null" >
        LastLoginTime,
      </if>
      <if test="longincount != null" >
        LonginCount,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastlogintime != null" >
        #{lastlogintime,jdbcType=TIMESTAMP},
      </if>
      <if test="longincount != null" >
        #{longincount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.alive.ssmtest.pojo.User" >
    update synccacheuser
    <set >
      <if test="username != null" >
        Username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        Password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        Status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        CreateTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastlogintime != null" >
        LastLoginTime = #{lastlogintime,jdbcType=TIMESTAMP},
      </if>
      <if test="longincount != null" >
        LonginCount = #{longincount,jdbcType=INTEGER},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.alive.ssmtest.pojo.User" >
    update synccacheuser
    set Username = #{username,jdbcType=VARCHAR},
      Password = #{password,jdbcType=VARCHAR},
      Status = #{status,jdbcType=INTEGER},
      CreateTime = #{createtime,jdbcType=TIMESTAMP},
      LastLoginTime = #{lastlogintime,jdbcType=TIMESTAMP},
      LonginCount = #{longincount,jdbcType=INTEGER}
    where Id = #{id,jdbcType=INTEGER}
  </update>
</mapper>